import type { NextPage } from 'next';
import Head from 'next/head';
import Image from 'next/image';
import React from 'react';
import ArticlesList from '../components/ArticlesList';
import articleService from '../services/article.service';
import ReactPaginate from 'react-paginate';

import styles from '../styles/Home.module.css';
import { useRouter } from 'next/dist/client/router'
import { TablePagination } from '@mui/material';

const Home: NextPage = ({ articles }: any) => {
  const router = useRouter()
  const [page, setPage] = React.useState(0);
  console.log(articles);
  const handleChangePage = (
    event: React.MouseEvent<HTMLButtonElement> | null,
    newPage: number,
  ) => {
    setPage(newPage);
    const currentPath = router.pathname;
    const currentQuery = router.query;
    currentQuery.page = (newPage).toString();
    router.push({
      pathname: currentPath,
      query: currentQuery,
  });
  };
  return (
    <div className={styles.container}>
      <Head>
        <title>News</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <div>
        <ArticlesList articlesList={articles.data}/>
      <TablePagination count={-1} onPageChange={handleChangePage} 
                       page={page} rowsPerPage={15} rowsPerPageOptions={[]} />

        </div>
      
      </main>
    </div>
  )
}

export default Home
export const getServerSideProps  = async ({ query }: any) => {
    const page = query.page || 1; //if page empty we request the first page
    const articles = (await articleService.getPagedArticles(page)).data;
    return {
      props: {
        articles 
      }
    };
}